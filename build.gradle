buildscript {
	ext {
		springBootVersion = "2.0.2.RELEASE"
		springSecurityVersion = "5.0.4.RELEASE"
		httpClientVersion = "4.5.5"
		guavaVersion = "24.1-jre"
		lombokVersion = "1.16.20"
		selmaVersion = "1.0"
		gradleAptVersion = "0.15"
		hibernateVersion = "5.2.16.Final"
		jargon2ApiVersion = "1.0.1"
		jargon2NativeVersion = "1.1.0"
		h2Version = "1.4.197"
		springfoxSwaggerVersion = "2.8.0"
		htmlSanitizerVersion = "20180219.1"
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("fr.xebia.extras:selma:${selmaVersion}")
		classpath("net.ltgt.gradle:gradle-apt-plugin:${gradleAptVersion}")
	}
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"
apply plugin: "net.ltgt.apt"
apply plugin: "net.ltgt.apt-eclipse"

group = "ch.fhnw.wodss"
version = "1.0.0"
sourceCompatibility = 1.8
defaultTasks "bootRun"

repositories {
	mavenCentral()
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
    compile("org.springframework.security:spring-security-messaging:${springSecurityVersion}")
    compile("org.springframework.boot:spring-boot-starter-mail:${springBootVersion}")
  	compile("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")
  	
    compile("org.apache.httpcomponents:httpclient:${httpClientVersion}")
    compile("com.google.guava:guava:${guavaVersion}")
    
  	compile("org.projectlombok:lombok:${lombokVersion}")
  	
  	compile("fr.xebia.extras:selma:${selmaVersion}")
  	compile("fr.xebia.extras:selma-processor:${selmaVersion}") 
    
  	compile("org.hibernate:hibernate-core:${hibernateVersion}")
  	
	compile("com.kosprov.jargon2:jargon2-api:${jargon2ApiVersion}")
	runtime("com.kosprov.jargon2:jargon2-native-ri-backend:${jargon2NativeVersion}")
	
  	runtime("com.h2database:h2:${h2Version}")
  	
    compile("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
    compile("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}")
    
    compile("com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:${htmlSanitizerVersion}")
  	
	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	testCompile("org.springframework.security:spring-security-test:${springSecurityVersion}")
}

bootJar {
	launchScript()
}